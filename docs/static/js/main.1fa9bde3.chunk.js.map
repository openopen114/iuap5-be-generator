{"version":3,"sources":["Context/AppContext.js","Context/ContextProvider.js","components/Header/Header.jsx","components/SettingArea/SettingArea.jsx","utils/generator.js","components/AnnotationConfig/AnnotationConfig.jsx","components/HighlightArea/HighlightArea.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppContextProvider","props","useState","setting","setSetting","genResult","setGenResult","Provider","value","children","Header","ghost","className","icon","GithubOutlined","href","target","TextArea","SettingArea","useContext","useForm","form","layout","onFinish","values","console","log","tableName","tableSchema","packageName","projectName","tableSchemaArr","_tableSchema","preprocessData","_","patt","RegExp","item","test","o","map","Map","set","ignoreColumnName","result","i","length","indexOf","obj","key","columnName","columnType","javaName","javaType","get","trim","substring","push","utils","name","Item","label","rules","required","message","rows","defaultValue","type","htmlType","AnnotationConfig","doGenerate","generateResult","annotation","location","codeString","_setting","_enumColumnObj","at_CodeRules","beautify","title","PO","hasEnum","DAO","Service","services","toString","DTO","Controller","UtilsProcessSqlParams","columns","dataIndex","render","text","record","index","Group","onChange","e","_index","newTableSchema","dataSource","pagination","CodeOutlined","onClick","HighlightArea","shape","CopyOutlined","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1fa9bde3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//建立 Context\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import React, { useState } from \"react\";\r\n\r\nimport AppContext from \"./AppContext\";\r\n\r\n// 設計Provider\r\nconst AppContextProvider = props => {\r\n  // 設定區域\r\n  const [setting, setSetting] = useState({});\r\n\r\n  const [genResult, setGenResult] = useState([]);\r\n\r\n  return (\r\n    //這Provider提供 name 跟 setName 給子組件用(子組件可用 useContext獲取)\r\n    <AppContext.Provider\r\n      value={{ setting, setSetting, genResult, setGenResult }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport \"./Header.scss\";\n\nexport default function Header() {\n  return (\n    <div>\n      {/* Github Button */}\n\n      <Button ghost className=\"github-btn\" icon={<GithubOutlined />}>\n        <a\n          href=\"https://github.com/openopen114/iuap5-be-generator\"\n          target=\"_blank\"\n        >\n          {\" \"}\n          Github\n        </a>\n      </Button>\n\n      <h1 className=\"app-title\">IUAP5 BE GENERATOR</h1>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../Context/AppContext\";\nimport { Form, Input, Button } from \"antd\";\n\nimport * as utils from \"../../utils/generator\";\n\nimport * as _ from \"lodash\";\n\nimport \"./SettingArea.scss\";\n\nconst { TextArea } = Input;\n\nexport default function SettingArea() {\n  const { setSetting } = useContext(AppContext);\n\n  const [form] = Form.useForm();\n\n  // Submit 完成提交事件\n  const handleSubmit = values => {\n    console.log(\"onFinish Success:\");\n    console.log(values);\n    const { tableName, tableSchema, packageName, projectName } = values;\n    const tableSchemaArr = utils.formatTableSchemaToArray(tableSchema);\n\n    setSetting({\n      tableName: _.toUpper(tableName),\n      tableSchema: tableSchemaArr,\n      packageName: _.toLower(packageName) + \".\" + _.toLower(projectName),\n      projectName: _.upperFirst(projectName)\n    });\n  };\n\n  return (\n    <div className=\"setting-area\">\n      <Form\n        layout={\"vertical\"}\n        form={form}\n        onFinish={handleSubmit}\n        name=\"setting-area-form\"\n      >\n        {/* Table Name */}\n        <Form.Item\n          label=\"# Table Name\"\n          name=\"tableName\"\n          rules={[{ required: true, message: \"Please input your Table Name!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        {/* Table Schema */}\n        <Form.Item\n          label=\"# Table Schema\"\n          name=\"tableSchema\"\n          rules={[\n            { required: true, message: \"Please input your table Schema !\" }\n          ]}\n        >\n          <TextArea rows={10} />\n        </Form.Item>\n\n        {/* Package Name */}\n        <Form.Item\n          label=\"# Package Name\"\n          name=\"packageName\"\n          rules={[\n            { required: true, message: \"Please input your package Name!\" }\n          ]}\n        >\n          <Input defaultValue=\"com.yonyou.iuap.xxx\" />\n        </Form.Item>\n\n        {/* Project Name */}\n        <Form.Item\n          label=\"# Project Name\"\n          name=\"projectName\"\n          rules={[\n            { required: true, message: \"Please input your Project Name !\" }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import * as _ from \"lodash\";\nimport * as beautify from \"js-beautify\";\n\n//將 table schema 轉成 Array\nexport const formatTableSchemaToArray = _tableSchema => {\n  let preprocessData = _.split(_tableSchema, \"[\");\n  const patt = new RegExp(\"]\");\n  preprocessData = _.filter(preprocessData, item => patt.test(item));\n  preprocessData = _.map(preprocessData, item => _.split(item, \"]\")[0]);\n\n  preprocessData = _.filter(preprocessData, o => {\n    return o !== \"\" && o !== \"\\n\";\n  });\n\n  const map = new Map();\n\n  map.set(\"VAR\", \"String\"); //VARCHAR\n  map.set(\"DEC\", \"Double\"); //DECIMAL\n  map.set(\"INT\", \"Integer\"); //INT\n  map.set(\"NVA\", \"String\"); //NVARCHAR\n  map.set(\"CHA\", \"String\"); //CHAR\n  map.set(\"BIT\", \"Boolean\"); //BIT\n\n  //ignore entity colunm\n  const ignoreColumnName = [\n    \"CREATE_TIME\",\n    \"CREATE_USER\",\n    \"CREATE_USER_NAME\",\n    \"LAST_MODIFIED\",\n    \"LAST_MODIFY_USER\",\n    \"LAST_MODIFY_USER_NAME\",\n    \"TS\",\n    \"DR\",\n    \"ID\"\n  ];\n\n  let result = [];\n  for (let i = 0; i < preprocessData.length; i += 2) {\n    const isBasePO =\n      ignoreColumnName.indexOf(_.toUpper(preprocessData[i])) > -1;\n\n    if (isBasePO) {\n      continue;\n    }\n\n    let obj = {\n      key: preprocessData[i],\n      columnName: preprocessData[i],\n      columnType: preprocessData[i + 1],\n      javaName: _.camelCase(preprocessData[i]),\n      javaType: map.get(preprocessData[i + 1].trim().substring(0, 3))\n        ? map.get(preprocessData[i + 1].trim().substring(0, 3))\n        : \"String\"\n    };\n    result.push(obj);\n  }\n\n  return result;\n};\n\n//產生 PO\nexport const genPO = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  const hasEnum = _.find(\n    tableSchema,\n    item => item.annotation === \"at_I18nEnumCode\"\n  );\n\n  result += `\n      package ${packageName}.po;\n\n      import com.alibaba.fastjson.annotation.JSONField;\n      import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n      import com.yonyou.iuap.baseservice.entity.AuditTrail;\n      import com.yonyou.iuap.baseservice.entity.MainBusinessObjectCode;\n      import com.yonyou.iuap.baseservice.entity.annotation.BizLogs;\n      import com.yonyou.iuap.baseservice.entity.annotation.CodeRules;\n      import com.yonyou.iuap.baseservice.entity.annotation.I18nEnumCode;\n      import com.yonyou.iuap.baseservice.entity.annotation.Reference;\n      import com.yonyou.iuap.baseservice.support.bpm.bo.IBpmModel;\n      import com.yonyou.iuap.baseservice.support.condition.Condition;\n      import com.yonyou.iuap.baseservice.support.condition.Match;\n      `;\n\n  if (hasEnum) {\n    result += `import ${packageName}.constant.*;`;\n  }\n  result += `\n      import com.yonyou.iuap.ucf.dao.BasePO;\n      import lombok.Data;\n\n      import javax.persistence.Column;\n      import javax.persistence.Table;\n      import javax.persistence.Transient;\n      import java.math.BigDecimal;\n\n      import static com.yonyou.iuap.baseservice.support.condition.Match.EQ;\n      import static com.yonyou.iuap.baseservice.support.condition.Match.LIKE;\n\n      //@BizLogs(metaId=\"19dab60c-0848-493d-956a-a5a8801adf62\")\n      @JsonIgnoreProperties(ignoreUnknown = true)\n      @Table(name = \"${tableName}\")`;\n\n  //檢查是否有需code rule字段\n  if (at_CodeRules) {\n    result += `\n    @CodeRules(ruleCode = \"xxxxx\", target = \"${at_CodeRules}\")`;\n  }\n\n  result += `\n    @Data\n    public class ${projectName}PO extends BasePO implements AuditTrail  {\n  `;\n\n  _.forEach(tableSchema, item => {\n    switch (item.annotation) {\n      case \"at_I18nEnumCode\":\n        result += `\n\n    /*\n    *\n    * ${item.columnName}\n    * \n    */    \n    @I18nEnumCode(clazz = ${_.upperFirst(item.javaName)}Enum.class, target = \"${\n          item.javaName\n        }EnumValue\")\n    @Condition\n    @Column(name = \"${item.columnName}\")\n    private ${item.javaType} ${item.javaName}; \n\n        \n    @Transient\n    private String ${item.javaName}EnumValue;  \n        \n        `;\n        break;\n      case \"at_Reference\":\n        result += `\n\n\n                  /*\n                  *\n                  * ${item.columnName}\n                  * \n                  */   \n              @Condition\n              @Column(name = \"${item.columnName}\")\n              @Reference(code = \"xxxxx\", srcProperties = {\"code\"}, desProperties = {\"${item.javaName}Name\"})\n              private ${item.javaType} ${item.javaName}; \n\n\n      \n      `;\n\n        const findRefColumnName = _.find(\n          tableSchema,\n          item => item.javaName === `${item.javaName}Name`\n        );\n        if (!findRefColumnName) {\n          result += `\n            @Transient\n            private String ${item.javaName}Name;  `;\n        }\n        break;\n      default:\n        result += ` \n\n        /*\n        *\n        * ${item.columnName}\n        * \n        */   \n        @Condition(match = Match.LIKE)\n        @Column(name = \"${item.columnName}\")\n        private ${item.javaType} ${item.javaName}; \n        `;\n    }\n  });\n\n  result += `\n         /**\n\t\t     * 修改人 \n\t\t     */\n\t\t    @Column(name = \"last_modify_user\")\n\t\t    private String lastModifyUser;\n\n\t\t    @Column(name = \"last_modify_user_name\")\n\t\t    //@Transient\n\t\t    private String lastModifyUserName;\n\n\t\t    /**\n\t\t     * 修改時間\n\t\t     */\n\t\t    @Column(name = \"last_modified\")\n\t\t    private String lastModified;\n\n\t\t    /**\n\t\t     * 創建人\n\t\t     */\n\t\t    @Column(name = \"create_user\")\n\t\t    private String createUser;\n\n\t\t    @Column(name = \"create_user_name\")\n\t\t    private String createUserName;\n\n\t\t    /**\n\t\t     * 創建時間\n\t\t     */\n\t\t    @Column(name = \"create_time\")\n\t\t    private String createTime;\n  \n  `;\n\n  result += `\n    }\n  `;\n\n  return beautify.js_beautify(result);\n};\n\n//產生 DAO\nexport const genDAO = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  result += `\n  \n  package ${packageName}.dao;\n\n  import org.apache.ibatis.annotations.Mapper;\n  import org.springframework.stereotype.Repository;\n  import ${packageName}.po.${projectName}PO;\n  import com.yonyou.iuap.ucf.dao.BaseDAO;\n  \n  @Mapper\n  @Repository\n  public interface  ${projectName}DAO extends BaseDAO<${projectName}PO, String> {\n  \n  }\n  \n  `;\n  return beautify.js_beautify(result);\n};\n\n//產生 Service\nexport const genService = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  result += ` \n\n          package ${packageName}.service;\n\n        import static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.I18N_ENUM;\n        import org.springframework.beans.factory.annotation.Autowired;\n        import org.springframework.stereotype.Service;\n        import com.yonyou.iuap.baseservice.intg.service.GenericUcfService;\n        import com.yonyou.iuap.baseservice.intg.support.ServiceFeature;\n        import ${packageName}.dao.${projectName}DAO;\n        import ${packageName}.po.${projectName}PO;\n        import static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.AUDIT;\n        import static com.yonyou.iuap.baseservice.intg.support.ServiceFeature.BIZLOGS;\n        \n        @Service\n        public class ${projectName}Service extends GenericUcfService<${projectName}PO,String> {\n\n            @Autowired\n            private ${projectName}DAO dao;\n\n            @Autowired\n            public void setContractDAO(${projectName}DAO dao) {\n                this.dao = dao;\n                super.setGenericMapper(dao);\n            }\n\n\n\n\n  `;\n\n  //要插拔的服務\n\n  let services = [\"AUDIT\"];\n\n  const hasEnum = _.find(\n    tableSchema,\n    item => item.annotation === \"at_I18nEnumCode\"\n  );\n\n  if (hasEnum) {\n    services.push(\"I18N_ENUM\");\n  }\n\n  if (at_CodeRules) {\n    services.push(\"ServiceFeature.CODERULES\");\n  }\n\n  result += ` \n\n  @Override\n  protected ServiceFeature[] getFeats() {\n    return new ServiceFeature[] {${services.toString()}};\n  }\n\n  }\n`;\n  return beautify.js_beautify(result);\n};\n\n//產生 DTO\nexport const genDTO = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  result += ` \n   package ${packageName}.dto;\n\n      import java.util.List;\n      import java.util.Map;\n      import com.yonyou.iuap.baseservice.support.entity.vo.BaseSearchVO;\n      import lombok.Data;\n\n      @Data\n      public class ${projectName}SearchVO extends BaseSearchVO {\n        //动态查询方法传入查询条件A1\n          /**处理行过滤参数*/\n          private List<Map<String, Object>> whereParam;\n          /**处理复合排序参数*/\n        private List<Map<String, String>> orderByParam;\n    `;\n\n  _.forEach(tableSchema, item => {\n    result += ` \n\n    /** ${item.javaName} **/\n    private ${item.javaType} ${item.javaName};\n\n     `;\n  });\n\n  result += ` } `;\n\n  return beautify.js_beautify(result);\n};\n\n//產生 Controller\nexport const genController = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  result += `package  ${packageName}.controller;\n\n    import java.io.Serializable;\n    import java.lang.reflect.Field;\n\n    import javax.servlet.http.HttpServletRequest;\n\n    import org.apache.commons.lang3.StringUtils;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.data.domain.Page;\n    import org.springframework.transaction.annotation.Transactional;\n    import org.springframework.web.bind.annotation.RequestBody;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RequestMethod;\n    import org.springframework.web.bind.annotation.RequestParam;\n    import org.springframework.web.bind.annotation.RestController;\n\n    import com.alibaba.fastjson.JSONObject;\n    import com.yonyou.iuap.baseservice.support.entity.dto.SimpleSearchDTO;\n    import com.yonyou.iuap.baseservice.support.util.CommonTools;\n    import ${packageName}.dto.${projectName}SearchVO;\n    import ${packageName}.po.${projectName}PO;\n    import ${packageName}.service.${projectName}Service;\n    import com.yonyou.iuap.demo.utils.CookiesUtils;\n    import com.yonyou.iuap.demo.utils.SearchSupportUtil;\n    import com.yonyou.iuap.ucf.common.exception.BusinessException;\n    import com.yonyou.iuap.ucf.common.i18n.MessageUtils;\n    import com.yonyou.iuap.ucf.common.rest.CommonResponse;\n    import com.yonyou.iuap.ucf.dao.support.SqlParam;\n    import com.yonyou.iuap.ucf.dao.support.UcfPageRequest;\n    import com.yonyou.iuap.ucf.dao.utils.FieldUtil;\n\n    import cn.hutool.core.util.ReflectUtil;\n\n    @RestController\n    @RequestMapping(value = \"/${_.toLower(projectName)}\")\n    public class ${projectName}Controller {\n\n    private Logger logger = LoggerFactory.getLogger(${projectName}Controller.class);\n    \n    @Autowired\n    private ${projectName}Service ${_.toLower(projectName)}Service;\n    \n    \n    @RequestMapping(value = \"/list\", method = RequestMethod.POST)\n    public Object list(@RequestBody ${projectName}SearchVO searchVO) {\n        //case1：分页条数=1时查询全部数据---5.0分页约定\n        if (searchVO.getPageSize() == 1) {\n       searchVO.setPageSize(Integer.MAX_VALUE-1);\n     }\n        //case2：orderField转换--->属性到字段,验证排序条件的合法性\n        if(!StringUtils.isEmpty(searchVO.getOrderField())&&!StringUtils.isEmpty(searchVO.getOrderSort())){\n          try {\n            Field field = ReflectUtil.getField(${projectName}PO.class, searchVO.getOrderField());\n            searchVO.setOrderField(FieldUtil.getColumnName(field));\n            searchVO.setOrderSort(searchVO.getOrderSort().toString().toUpperCase());\n       } catch (Exception e) {\n         return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(3L), MessageUtils.getMessage(\"ja.iuap.xxxxxx.0001\")));\n       }\n        }\n\n\n        /**A2标准查询对于String类型字段需要先做如下处理**/\n        //TODO 需要修改SimpleSearchDTO的toSearchParams方法中非空判断，目前先这样处理非EQ查询\n\n        `;\n\n  //處理 String 類型非空判斷\n\n  _.forEach(tableSchema, item => {\n    if (item.javaType === \"String\") {\n      result += `\n      \n      if (StringUtils.isEmpty(searchVO.get${_.upperFirst(item.javaName)}())) {\n        searchVO.set${_.upperFirst(item.javaName)}(null);\n      }\n      \n      `;\n    }\n  });\n\n  result += ` \n        SimpleSearchDTO<${projectName}SearchVO> searchDTO = new SimpleSearchDTO<>();\n        searchDTO.setSearchEntity(searchVO);\n        /**1.通过condition注解实现where条件查询*/\n        SqlParam sqlParams = (SqlParam) searchDTO.toSearchParams(${projectName}PO.class);\n\n        /**A1多过滤和多排序处理*/\n        SearchSupportUtil.processSqlParamsFor${_.upperFirst(\n          projectName\n        )}(searchVO, ${projectName}PO.class,sqlParams);\n       \n        Page<${projectName}PO> page = ${_.toLower(\n    projectName\n  )}Service.selectAllByPage(UcfPageRequest.of(searchVO.getPageIndex(), searchVO.getPageSize()), sqlParams);\n        return CommonResponse.ofSuccess(page);\n    }\n    \n    \n    \n    \n\n    @RequestMapping(value = \"/get${projectName}InfoById\", method = RequestMethod.GET)\n    public Object get${projectName}InfoByUniqueKey(@RequestParam(value = \"id\") Serializable id) {\n        if (id == null || id.equals(\"\")) {\n            logger.warn(MessageUtils.getMessage(\"ja.iuap.con.0001\"));\n            return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(4L), MessageUtils.getMessage(\"ja.iuap.con.0001\")));\n        }\n        ${projectName}PO vo = ${_.toLower(\n    projectName\n  )}Service.findUnique(\"id\", id);\n        if (vo != null) {\n            logger.info(\"查询成功=============\"+id);\n            return CommonResponse.ofSuccess(vo);\n        } else {\n            logger.warn(MessageUtils.getMessage(\"ja.iuap.con.0001\"));\n            return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(3L), MessageUtils.getMessage(\"ja.iuap.con.0002\")));\n        }\n    }\n    \n    \n    \n    @RequestMapping(value = \"/saveEntity\", method = RequestMethod.POST)\n    @Transactional\n    public Object saveEntity(HttpServletRequest request, @RequestBody ${projectName}PO... vo) {\n   \n      if (vo.length == 0) {\n            logger.warn(MessageUtils.getMessage(\"ja.iuap.con.0003\"));\n            return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(3L), MessageUtils.getMessage(\"ja.iuap.con.0003\")));\n        }\n        String value = CookiesUtils.getUnameByCookies(request);\n        for (${projectName}PO ${projectName}PO : vo) {\n          if(${projectName}PO.getId()==null){\n            ${projectName}PO.setCreateUserName(value);\n          }\n          ${projectName}PO.setLastModifyUserName(value);\n          \n \n          ${_.toLower(projectName)}Service.save(${projectName}PO);\n     }\n        return CommonResponse.ofSuccess();\n\n    }  \n    \n    \n    \n    \n    @RequestMapping(value = \"/deleEntity\", method = RequestMethod.POST)\n    public Object deleEntity(@RequestBody ${projectName}PO... entities) {\n        if (entities.length == 0) {\n            logger.warn(MessageUtils.getMessage(\"ja.iuap.con.0004\"));\n            return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(3L), MessageUtils.getMessage(\"ja.iuap.con.0004\")));\n        }\n        int count = 0;\n        for (${projectName}PO entity : entities) {\n            count += this.${_.toLower(\n              projectName\n            )}Service.delete(entity.getId());\n        }\n        if (count == entities.length) {\n            JSONObject result = new JSONObject();\n            result.put(\"count\", count);\n            return CommonResponse.ofSuccess(result);\n        } else {\n            logger.warn(MessageUtils.getMessage(\"ja.iuap.con.0004\"));\n            return CommonResponse.ofFail(new BusinessException(CommonTools.buildErrorCode(5L), MessageUtils.getMessage(\"ja.iuap.con.0004\")));\n        }\n }\n\n\n\n\n\n    \n    \n}\n`;\n  return _.replace(beautify.js_beautify(result), / L\\)/g, \"L)\");\n};\n\n//產生 contant/Enum\nexport const genConstantEnum = (_setting, _enumColumnObj) => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n\n  const { javaName, javaType } = _enumColumnObj;\n\n  let result = \"\";\n\n  result += `\n          package ${packageName}.constant;\n\n        import com.yonyou.iuap.ucf.common.enums.I18nEnum;\n\n        import java.io.Serializable;\n\n        public enum ${_.upperFirst(javaName)}Enum implements I18nEnum {\n          /*\n          Female(0,\"女\",\"ja.xxxxx.enum.0001\"),\n          Male(1,\"男\",\"ja.xxxxx.enum.0002\")\n          */\n          \n          ;\n          \n          private ${javaType} key;\n          \n          private String value;\n          \n          private String i18nKey;\n          \n          private ${_.upperFirst(\n            javaName\n          )}Enum(${javaType} key, String value, String i18nKey) {\n            this.key = key;\n            this.value = value;\n            this.i18nKey = i18nKey;\n          }\n          @Override\n          public String getI18nTextCode() {\n            return i18nKey;\n          }\n\n          @Override\n          public String getI18nDefaultText() {\n            return value;\n          }\n\n          @Override\n          public Serializable code() {\n            return key;\n          }\n        }\n\n  `;\n\n  return beautify.js_beautify(result);\n};\n\n//產生 utils/processSqlParamsFor$\nexport const genUtilsProcessSqlParams = _setting => {\n  const {\n    tableName,\n    tableSchema,\n    packageName,\n    projectName,\n    at_CodeRules\n  } = _setting;\n  let result = \"\";\n\n  result += `\n  // import ${packageName}.dto.${_.upperFirst(projectName)}SearchVO;\n  public static SqlParam processSqlParamsFor${_.upperFirst(\n    projectName\n  )}(${_.upperFirst(\n    projectName\n  )}SearchVO searchVO, Class<?> entityClass,SqlParam sqlParams) {\n\t\tif (CollectionUtils.isNotEmpty(searchVO.getWhereParam())) {\n\t\t\t@SuppressWarnings(\"all\")\n\t\t\tList<Map<String, Object>> wheres = searchVO.getWhereParam();\n\t\t\tfor (Map<String, Object> statment : wheres) {\n\t\t\t\tString keyStr = String.valueOf(statment.get(WhereParams.key.name()));\n\t\t\t\tObject valueObj = statment.get(WhereParams.value.name());\n\t\t\t\tString conditionStr = String.valueOf(statment.get(WhereParams.condition.name()));\n\t\t\t\t/**关键参数缺一不可*/\n\t\t\t\tif (StringUtils.isEmpty(keyStr) || StringUtils.isEmpty(valueObj)) {\n\t\t\t\t\tlogger.warn(\"reading incomplete whereParams [\" + keyStr + \":\" + valueObj + \"]\");\n\t\t\t\t\tthrow new RuntimeException(\"recieving incomplete whereParams [\" + keyStr + \":\" + valueObj + \"]\");\n\t\t\t\t}\n\t\t\t\tField keyField = ReflectUtil.getField(entityClass, keyStr.toString());\n\t\t\t\tif (keyField == null) {\n\t\t\t\t\tlogger.warn(\"finding none field [\" + keyStr + \"] in model class[\" + entityClass + \"]!!\");\n\t\t\t\t\tthrow new RuntimeException(\n\t\t\t\t\t\t\t\"thre is no field [\" + keyStr + \"] in model class[\" + entityClass + \"]!!\");\n\t\t\t\t}\n\t\t\t\tString keyColunm = FieldUtil.getColumnName(keyField);\n\t\t\t\tif (StringUtils.isEmpty(conditionStr)) {\n\t\t\t\t\tsqlParams.eq(keyColunm, valueObj);\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.LIKE.name())) {\n\t\t\t\t\tsqlParams.like(keyColunm, String.valueOf(valueObj));\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.ULIKE.name())) {\n\t\t\t\t\tsqlParams.notLike(keyColunm, String.valueOf(valueObj));\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.EQ.name())) {\n\t\t\t\t\tsqlParams.eq(keyColunm, valueObj);\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.UEQ.name())) {\n\t\t\t\t\tsqlParams.ne(keyColunm, valueObj);\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.LLIKE.name())) {\n\t\t\t\t\tsqlParams.like(keyColunm, \"%\" + String.valueOf(valueObj));\n\t\t\t\t} else if (conditionStr.equalsIgnoreCase(MatchParams.RLIKE.name())) {\n\t\t\t\t\tsqlParams.like(keyColunm, String.valueOf(valueObj) + \"%\");\n\t\t\t\t} else {\n\t\t\t\t\tsqlParams.eq(keyColunm, valueObj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (CollectionUtils.isNotEmpty(searchVO.getOrderByParam())) {\n\t\t\t@SuppressWarnings(\"all\")\n            List<Map<String, String>> sorts = searchVO.getOrderByParam();\n            if (sorts.size()>0){\n            \tList<String> fields = new ArrayList<String>();\n                for (Map<String, String> sort : sorts) {\n                    if (sort.keySet().size() > 0 && sort.keySet().toArray()[0] != null) {\n                        Field keyField = ReflectUtil.getField(entityClass, sort.keySet().toArray()[0].toString());\n                        if (keyField==null){\n                            throw new RuntimeException(\"cannot find field \"+sort.keySet().toArray()[0].toString()+\" in  model [\" + entityClass + \"] \");\n                        }\n                        if(sort.get(sort.keySet().toArray()[0]).toString().equalsIgnoreCase(Direction.DESC)){\n                        \tfields.add(FieldUtil.getColumnName(keyField)+\" \"+Direction.DESC);\n                        }else {\n                        \tfields.add(FieldUtil.getColumnName(keyField)+\" \"+Direction.ASC);\n\t\t\t\t\t\t}\n                    }\n                }\n                sqlParams.orderBy(fields.toArray( new String[]{}));\n            }else {\n                logger.debug(\"receiving none sort param in sortMap of querying =>\"+entityClass);\n            }\n        }\n\t\treturn sqlParams;\n\n\t}\n  \n  `;\n\n  return beautify.js_beautify(result);\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../Context/AppContext\";\nimport * as utils from \"../../utils/generator\";\n\nimport { Table, Radio, Button } from \"antd\";\nimport { CodeOutlined } from \"@ant-design/icons\";\n\nimport * as _ from \"lodash\";\n\nimport \"./AnnotationConfig.scss\";\n\nexport default function AnnotationConfig() {\n  const { setting, setSetting, setGenResult } = useContext(AppContext);\n  const { tableSchema } = setting;\n\n  console.log(\"tableSchema\");\n  console.log(tableSchema);\n\n  // on chage 事件\n  const onChange = (e, _index) => {\n    let newTableSchema = _.cloneDeep(tableSchema);\n\n    newTableSchema[_index] = {\n      ...newTableSchema[_index],\n      annotation: e.target.value\n    };\n\n    if (e.target.value === \"at_CodeRules\") {\n      //自動編碼欄位,加設定在setting\n      setSetting({\n        ...setting,\n        tableSchema: newTableSchema,\n        at_CodeRules: tableSchema[_index][\"javaName\"]\n      });\n    } else {\n      setSetting({\n        ...setting,\n        tableSchema: newTableSchema\n      });\n    }\n  };\n\n  // 產生後端五寶\n  const doGenerate = () => {\n    console.log(\"產生後端五寶\");\n\n    const { projectName } = setting;\n    const generateResult = [];\n\n    _.forEach(tableSchema, item => {\n      if (item.annotation === \"at_I18nEnumCode\") {\n        const enumConstantClass = utils.genConstantEnum(setting, item);\n\n        const obj = {\n          location: \"#domain\",\n          codeString: enumConstantClass,\n          title: `${projectName}Enum`\n        };\n\n        generateResult.push(obj);\n      }\n    });\n    const PO = utils.genPO(setting);\n    const DAO = utils.genDAO(setting);\n    const Service = utils.genService(setting);\n    const DTO = utils.genDTO(setting);\n    const Controller = utils.genController(setting);\n    const UtilsProcessSqlParams = utils.genUtilsProcessSqlParams(setting);\n\n    generateResult.push({\n      location: \"#domain\",\n      codeString: PO,\n      title: `${projectName}PO`\n    });\n\n    generateResult.push({\n      location: \"#domain\",\n      codeString: DAO,\n      title: `${projectName}DAO`\n    });\n\n    generateResult.push({\n      location: \"#domain\",\n      codeString: Service,\n      title: `${projectName}Service`\n    });\n\n    generateResult.push({\n      location: \"#app\",\n      codeString: DTO,\n      title: `${projectName}DTO`\n    });\n\n    generateResult.push({\n      location: \"#domain\",\n      codeString: Controller,\n      title: `${projectName}Controller`\n    });\n\n    generateResult.push({\n      location: \"#domain\",\n      codeString: UtilsProcessSqlParams,\n      title: `UtilsProcessSqlParamsFor${projectName}`\n    });\n\n    setGenResult(generateResult);\n  };\n\n  const columns = [\n    {\n      title: \"Column Name\",\n      dataIndex: \"columnName\",\n      key: \"columnName\"\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"javaType\",\n      key: \"javaType\"\n    },\n    {\n      title: \"Annotation\",\n      key: \"Annotation\",\n      render: (text, record, index) => (\n        <Radio.Group\n          onChange={e => onChange(e, index)}\n          value={record.annotation}\n        >\n          <Radio value={\"at_I18nEnumCode\"}>@I18nEnumCode</Radio>\n          <Radio value={\"at_Reference\"}>@Reference</Radio>\n          <Radio value={\"at_CodeRules\"}>@CodeRules</Radio>\n        </Radio.Group>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"annotation-table\">\n      <h1 className=\"text-gradient\">@ Annotation</h1>\n\n      {_.size(setting) > 0 && (\n        <Table columns={columns} dataSource={tableSchema} pagination={false} />\n      )}\n\n      {_.size(setting) > 0 && (\n        <Button\n          type=\"primary\"\n          icon={<CodeOutlined />}\n          onClick={() => doGenerate()}\n        >\n          Generate Code\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../Context/AppContext\";\n\nimport Highlight from \"react-highlight\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport { Button } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\n\nimport moduleName from \"../../../node_modules/highlight.js/scss/dracula.scss\";\nimport \"./HighlightArea.scss\";\n\nexport default function HighlightArea() {\n  const { genResult } = useContext(AppContext);\n\n  return (\n    <div className=\"highlight-area\">\n      {genResult.map(item => {\n        return (\n          <div key={`${item.title}`}>\n            <h1 className=\"result-title\">\n              [{`${item.location}`}] {`${item.title}`}\n            </h1>\n\n            <CopyToClipboard text={`${item.codeString}`}>\n              <Button shape=\"round\" icon={<CopyOutlined />}>\n                Copy\n              </Button>\n            </CopyToClipboard>\n\n            <Highlight className=\"java\">{`${item.codeString}`}</Highlight>\n\n            {/* <SyntaxHighlighter language=\"java\" style={xonokai}>\n              {`${item.codeString}`}\n            </SyntaxHighlighter> */}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppContextProvider from \"./Context/ContextProvider\";\n\nimport Header from \"./components/Header/Header\";\nimport SettingArea from \"./components/SettingArea/SettingArea\";\nimport AnnotationConfig from \"./components/AnnotationConfig/AnnotationConfig\";\nimport HighlightArea from \"./components/HighlightArea/HighlightArea\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContextProvider>\n        {/* 頭部 */}\n        <Header></Header>\n        {/* 設定區域 */}\n        <SettingArea></SettingArea>\n        {/* Annotation Config */}\n        <AnnotationConfig></AnnotationConfig>\n        {/* Syntax Highlight  */}\n        <HighlightArea></HighlightArea>\n      </AppContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}